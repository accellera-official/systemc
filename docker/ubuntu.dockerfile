ARG UBUNTU_VERSION=20.04
ARG IMAGE=ubuntu:$UBUNTU_VERSION

FROM $IMAGE

ARG BUILD_REGRESSION=OFF

WORKDIR /app

RUN apt-get update && \
    apt-get install -y \
    cmake \
    gcc \
    g++ \
    clang \
    && rm -rf /var/lib/apt/lists/*

# Copy the current directory contents into the container at /app
COPY . /app

# GCC builds
RUN CC=gcc CXX=g++ cmake -B BUILD/RELEASE/BUILD -DCMAKE_INSTALL_PREFIX=$PWD/BUILD/RELEASE -DCMAKE_CXX_FLAGS="-Werror" -DENABLE_REGRESSION=$BUILD_REGRESSION .
RUN CC=gcc CXX=g++ cmake --build BUILD/RELEASE/BUILD/ --parallel
RUN CC=gcc CXX=g++ cmake -B BUILD/RELEASE_STATIC/BUILD -DCMAKE_INSTALL_PREFIX=$PWD/BUILD/RELEASE_STATIC -DCMAKE_CXX_FLAGS="-Werror" -DBUILD_SHARED_LIBS=OFF -DENABLE_REGRESSION=$BUILD_REGRESSION .
RUN CC=gcc CXX=g++ cmake --build BUILD/RELEASE_STATIC/BUILD/ --parallel

# Clang builds
RUN CC=clang CXX=clang++ cmake -B BUILD/RELEASE_CLANG/BUILD -DCMAKE_INSTALL_PREFIX=$PWD/BUILD/RELEASE_CLANG -DCMAKE_CXX_FLAGS="-Werror" -DENABLE_REGRESSION=$BUILD_REGRESSION .
RUN CC=clang CXX=clang++ cmake --build BUILD/RELEASE_CLANG/BUILD/ --parallel
RUN CC=clang CXX=clang++ cmake -B BUILD/RELEASE_CLANG_STATIC/BUILD -DCMAKE_INSTALL_PREFIX=$PWD/BUILD/RELEASE_CLANG_STATIC -DCMAKE_CXX_FLAGS="-Werror" -DBUILD_SHARED_LIBS=OFF -DENABLE_REGRESSION=$BUILD_REGRESSION .
RUN CC=clang CXX=clang++ cmake --build BUILD/RELEASE_CLANG_STATIC/BUILD/ --parallel

CMD ["/bin/bash", "-c", "make -j `nproc` -C BUILD/RELEASE/BUILD/ check && make -j `nproc` -C BUILD/RELEASE_STATIC/BUILD/ check && make -j `nproc` -C BUILD/RELEASE_CLANG/BUILD/ check && make -j `nproc` -C BUILD/RELEASE_CLANG_STATIC/BUILD/ check"]
